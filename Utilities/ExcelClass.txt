package utilities;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import org.apache.poi.hssf.util.CellReference;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.util.IOUtils;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFClientAnchor;
import org.apache.poi.xssf.usermodel.XSSFDrawing;
import org.apache.poi.xssf.usermodel.XSSFPicture;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class ExcelClass {

	private String excel_file = "";
	private String sheet_name = "";
	public XSSFSheet sheet;
	public Cell cell;
	private static final String FILE_NAME = "C:\\Libro1.xlsx";
	
	public ExcelClass(String excel_file, String sheet_name){
		this.excel_file = excel_file;
		this.sheet_name = sheet_name;
	}

    public String readExcel(String celda)

    {

        String cellData = new String();


        try{
        	FileInputStream file = new FileInputStream(new File(excel_file));
        	XSSFWorkbook workbook = new XSSFWorkbook(file);

        	sheet = workbook.getSheet(sheet_name);

            CellReference cellReference = new CellReference(celda); 
            Row row = sheet.getRow(cellReference.getRow());
            cell = row.getCell(cellReference.getCol()); 

            if (cell!=null) {
                switch (cell.getCellTypeEnum()) {
                    case BOOLEAN:
                    	cellData = String.valueOf(cell.getBooleanCellValue());
                        break;
                    case NUMERIC:
                    	cellData = this.formatDouble(cell.getNumericCellValue());
                        break;
                    case STRING:
                    	cellData = cell.getStringCellValue();
                        break;
                    case BLANK:
                    	cellData = "";
                        break;
                    case ERROR:
                    	cellData = String.valueOf(cell.getErrorCellValue());
                        break;
					case FORMULA:
						break;
					case _NONE:
						cellData = "";
						break;
					default:
						break;

                }
            }
            

            workbook.close();

        }

        catch(Exception e)

        {

            System.out.println("readExcel ->"+e);

        }

        return cellData;

    }


    public void write(int fila, int columna, String value) throws IOException {
    	
    	 FileInputStream file = new FileInputStream(new File(excel_file));
    	 XSSFWorkbook workbook = new XSSFWorkbook(file);  
    	 sheet = workbook.getSheet(sheet_name);
         
    	 XSSFRow row = sheet.getRow(fila);
             
    	 XSSFCell cell = row.getCell(columna);
             
    	 cell.setCellValue(value);
         
         FileOutputStream outputStream = new FileOutputStream(FILE_NAME);
         workbook.write(outputStream);
         outputStream.close();
         

     }
    	
    

  
    public void insertarImagen(String ruta, int fila) throws IOException {
    	
     	FileInputStream file = new FileInputStream(new File(excel_file));
    	XSSFWorkbook workbook = new XSSFWorkbook(file);  
    	sheet = workbook.getSheet(sheet_name);
    	

        InputStream my_banner_image = new FileInputStream(ruta);

        byte[] bytes = IOUtils.toByteArray(my_banner_image);

        int my_picture_id = workbook.addPicture(bytes, Workbook.PICTURE_TYPE_PNG);

        my_banner_image.close();                

        XSSFDrawing drawing = sheet.createDrawingPatriarch();

        XSSFClientAnchor my_anchor = new XSSFClientAnchor();

        my_anchor.setCol1(5);
        my_anchor.setRow1(fila);           

        XSSFPicture  my_picture = drawing.createPicture(my_anchor, my_picture_id);

        my_picture.resize(1);

        FileOutputStream out = new FileOutputStream(new File(FILE_NAME));
        workbook.write(out);
        out.close();
    }
  
    
    public String formatDouble(double d) {
        if(d == (long) d)
            return String.format("%d",(long)d);
        else
            return String.format("%s",d);
    }
}   